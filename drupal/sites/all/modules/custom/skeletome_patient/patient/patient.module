<?php
// patient.module

/**
 * Gets a patient object by id
 *
 * @param $id
 */
function patient_get_patient($id) {
    $sql = "SELECT *
            FROM {patient}
            WHERE id=:id";
    return db_query($sql, array(":id" => $id))->fetchAll();
}

/**
 * Writes a patient to the database
 *
 * @param $patient
 */
function patient_write_patient($patient) {
    $primary_key = !empty($patient->id) ? array('id') : NULL;
    drupal_write_record('patient', $patient, $primary_key);
}

function patient_delete_patient($id) {
    $sql = "DELETE
            FROM {patient}
            WHERE id=:id";
    db_query($sql, array(":id" => $id));
}

function patient_services_resources() {
    return array(
        'patient' => array(
            'retrieve' => array(
                'help' => 'Retrieves a patient',
                'file' => array('file' => 'inc', 'module' => 'patient'),
                'callback' => '_patient_retrieve',
                'access callback' => '_patient_access',
                'access arguments' => array('view'),
                'access arguments append' => TRUE,
                'args' => array(
                    array(
                        'name' => 'id',
                        'type' => 'int',
                        'description' => 'The id of the node to get',
                        'source' => array('path' => '0'), // the first argument e.g. patient/{id}
                        'optional' => FALSE,
                    ),
                ),
            ),
            'create' => array(
                'help' => 'Creates a patient',
                'file' => array('file' => 'inc', 'module' => 'patient'),
                'callback' => '_patient_create',
                'access arguments' => array('patient resource create'),
                'access arguments append' => FALSE,
                'args' => array(
                    array(
                        'name' => 'data',
                        'type' => 'struct',
                        'description' => 'The patient object',
                        'source' => 'data',
                        'optional' => FALSE,
                    ),
                ),
            ),
            'update' => array(
                'help' => 'Updates a patient',
                'file' => array('file' => 'inc', 'module' => 'patient'),
                'callback' => '_patient_update',
                'access callback' => '_patient_access',
                'access arguments' => array('update'),
                'access arguments append' => TRUE,
                'args' => array(
                    array(
                        'name' => 'id',
                        'type' => 'int',
                        'description' => 'The id of the node to update',
                        'source' => array('path' => '0'),
                        'optional' => FALSE,
                    ),
                    array(
                        'name' => 'data',
                        'type' => 'struct',
                        'description' => 'The note data object',
                        'source' => 'data',
                        'optional' => FALSE,
                    ),
                ),
            ),
            'delete' => array(
                'help' => 'Deletes a patient',
                'file' => array('file' => 'inc', 'module' => 'patient'),
                'callback' => '_patient_delete',
                'access callback' => '_patient_access',
                'access arguments' => array('delete'),
                'access arguments append' => TRUE,
                'args' => array(
                    array(
                        'name' => 'nid',
                        'type' => 'int',
                        'description' => 'The id of the patient to delete',
                        'source' => array('path' => '0'),
                        'optional' => FALSE,
                    ),
                ),
            ),
            'index' => array(
                'help' => 'Retrieves a listing of patients',
                'file' => array('file' => 'inc', 'module' => 'patient'),
                'callback' => '_patient_index',
                'access callback' => 'user_access',
                'access arguments' => array('access content'),
                'access arguments append' => FALSE,
                'args' => array(
                    array(
                        'name' => 'page',
                        'type' => 'int',
                        'description' => '',
                        'source' => array(
                            'param' => 'page',
                        ),
                        'optional' => TRUE,
                        'default value' => 0,
                    ),
                    array(
                        'name' => 'parameters',
                        'type' => 'array',
                        'description' => '',
                        'source' => 'param',
                        'optional' => TRUE,
                        'default value' => array(),
                    ),
                ),
            ),
        ),
    );
}