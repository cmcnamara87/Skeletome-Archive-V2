<?php
// groupresource.install
/**
 * Implementation of hook_schema().
 */
function post_resource_schema() {
    $schema['posts'] = array(
        'description' => t('Stores users posts.'),
        'fields' => array(
            'id' => array(
                'description' => t('The primary identifier for a post.'),
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'created' => array(
                'description' => t('The timestamp for when the post was created.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'modified' => array(
                'description' => t('The timestamp for when the post was modified.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'text' => array(
                'description' => t('The text of the post'),
                'type' => 'text',
                'size' => 'medium',
            ),
            'type_id' => array(
                'description' => t('The type of the post e.g. general, diagnosis, xray'),
                'type' => 'varchar',
                'length' => 255,
            ),
            'uid' => array(
                'description' => t('The user that created the post.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'disorder_id' => array(
                'description' => t('Diagnosis in the post.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'share_id' => array(
                'description' => t('The patient share the post is attached to.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
        ),
        'foreign keys' => array(
            'poster' => array(
                'table' => 'users',
                'columns' => array('uid' => 'uid'),
            ),
            'type' => array(
                'table' => 'post_types',
                'columns' => array('id' => 'type_id'),
            ),
            'share' => array(
                'table' => 'shares',
                'columns' => array('id' => 'share_id'),
            ),
            'disorder' => array(
                'table' => 'disorders',
                'columns' => array('id' => 'disorder_id'),
            ),
        ),
        'primary key' => array('id'),
    );

    $schema['post_types'] = array(
        'description' => t('Stores the type of a post.'),
        'fields' => array(
            'id' => array(
                'description' => t('The primary identifier for a post.'),
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'created' => array(
                'description' => t('The timestamp for when the post was created.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'modified' => array(
                'description' => t('The timestamp for when the post was modified.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'name' => array(
                'description' => t('The type of the post e.g. general, diagnosis, xray'),
                'type' => 'varchar',
                'length' => 255,
            ),
        ),
        'primary key' => array('id'),
    );


    $schema['votes'] = array(
        'description' => t('Votes for a post (up or down)'),
        'fields' => array(
            'id' => array(
                'description' => t('The primary identifier for a vote.'),
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'created' => array(
                'description' => t('The timestamp for when the diagnosis was created.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'modified' => array(
                'description' => t('The timestamp for when the diagnosis was modified.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'vote' => array(
                'description' => t('1 or -1 for the vote'),
                'type' => 'int',
                'unsigned' => FALSE,
                'not null' => TRUE,
            ),
            'uid' => array(
                'description' => t('The user who voted.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
            'post_id' => array(
                'description' => t('The post being voted on.'),
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => 0,
            ),
        ),
        'foreign keys' => array(
            'voter' => array(
                'table' => 'users',
                'columns' => array('id' => 'uid'),
            ),
            'post' => array(
                'table' => 'posts',
                'columns' => array('id' => 'post_id'),
            ),
        ),
        'primary key' => array('id'),
    );


    return $schema;
}

/**
 * Implements hook_install()
 */
function post_resource_install() {
    global $user;

    // Install some default types
    $post_types = array(
        'General',
        'X-Rays',
        'Gene Mutations',
        'Diagnoses',
    );

    foreach($post_types as $post_type) {
        $data = array();
        $data['name'] = $post_type;
        $data['created'] = time();
        $data['modified'] = time();
        drupal_write_record('post_types', $data);
    }

    $clinician_role = user_role_load_by_name('clinician');
    user_role_grant_permissions($clinician_role->rid, array(
        'view posts',
        'create posts',
        'delete posts',
        'view votes',
        'create votes',
        'delete votes',
    ));
}